### Automatically generated GLASS config script for a single lens
###############################################################################
import os
import numpy as np

try:
    from Cocoa import NSSound
    from time import sleep
    sound = NSSound.alloc()
    sound.initWithContentsOfFile_byReference_('/System/Library/Sounds/Glass.aiff', True)
except ImportError:
    sound = False


### Meta info
dpath = ''
fname = 'RXJ1131-1231'
fpath = os.path.join(dpath, fname)
glass_basis('glass.basis.pixels', solver='rwalk')
meta(author='GLSCFactory', notes='single-config-mode')
setup_log(fpath+'.log')


### Sampler config
samplex_random_seed(0)
samplex_acceptance(rate=0.25, tol=0.15)

exclude_all_priors()
include_prior(
    'lens_eq',
    'time_delay',
    'profile_steepness',
    'J3gradient',
    'magnification',
    'PLsmoothness3',
#   'shared_h',
    'external_mass',
    'external_shear'
)


### Cosmology
omega(0.27, 0.73)

###############################################################################
### Lens
name = 'RXJ1131-1231'
zl = 0.295
globject(name)
zlens(zl)

pixrad(8)
steepness(0.5, None)
# hires(1, 3)

smooth(2, include_central_pixel=False)
local_gradient(45)

### Source
zs = 0.658

pos_par_td = [[1.3918710359378075, 1.6384899817144896], 'min', [-0.9619391085965819, 2.055620893404116], 'min', None, [0.28945362647234485, 2.1301085562058364], 'sad', None, [-0.2319600131397004, -1.1771436721905677], 'sad', None]
ABCD = pos_par_td[0:1]+pos_par_td[2:-1:3]

if len(ABCD) < 4:
    symm()
    shear(0.01)
else:
    # shear(0.3)
    shear(0.1)

source(zs, *pos_par_td)

tdelay = [0, 1.5, 9.61, 87]
tderr = [0, 2.49, 1.97, 8]
# explicit time delays
if tdelay:
    for i, td in enumerate(tdelay[1:]):
        if td:
            delay(ABCD[i], ABCD[i+1], [td-tderr[i+1], td+tderr[i+1]])

extx, exty = 0.5141027773820483, -0.13709407396854595
extm = PointMass(extx, exty, rc=0)
external_mass(extm, (0.05, 10))

###############################################################################
model(1000)
savestate(fpath+'.state')

if sound:
    sound.play()
    sleep(1)
    sound.stop()
